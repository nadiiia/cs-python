# implementation of card game - Memory

import simplegui
import random

#creates random deck 
deck1 = range(1,9)
deck2 = range(1,9)
deck = deck1 + deck2
random.shuffle(deck)
number = 0
exposed = [0]*16

# helper function to initialize globals
def init():
    global state, number, exposed, deck
    state = 0
    number = 0
    exposed = [0]*16
    random.shuffle(deck)
    label.set_text("Moves = 0")
    #pass  

     
# define event handlers
def mouseclick(pos):
    # add game state logic here
    global state, first, second, number 
    x_pos = pos[0]//50
    

    if  exposed[x_pos]== False:
        if state == 0:
            first = x_pos
            exposed[x_pos] = True
            #number += 1
            state = 1

        elif state == 1:
            exposed[x_pos] = True
            second = x_pos
            exposed[x_pos] = True
            state = 2
            number += 1
           
        elif state == 2:
            if deck[first] !=  deck[second]:
                exposed[first] = False
                exposed[second] = False
            exposed[x_pos] = True
            first = x_pos   
            state = 1
           # number += 1
    label.set_text("Moves =" + str(number))
    
                        
# cards are logically 50x100 pixels in size    
def draw(canvas):
    count = 0 
    pos = 35 
  

    for card in range(len(deck)):
        pos = 50 * (card + 1)
        if exposed[card] is True:
            
            canvas.draw_text(str(deck[card]), (pos-35, 60), 36, "White") 
            canvas.draw_polygon([(pos-50,0), (pos,0), (pos,100), (pos-50,100)], 1, "Red", None)

        elif exposed[card] == False:
            for card in range(len(deck)):
                canvas.draw_polygon([(pos-50,0), (pos,0), (pos,100), (pos-50,100)], 1, "Red", "Green")     
     

# create frame and add a button and labels
frame = simplegui.create_frame("Memory", 800, 100)
frame.add_button("Restart", init)
label = frame.add_label("Moves = "+ str(number))

# initialize global variables
init()

# register event handlers
frame.set_mouseclick_handler(mouseclick)
frame.set_draw_handler(draw)

# get things rolling
frame.start()


# Always remember to review the grading rubric